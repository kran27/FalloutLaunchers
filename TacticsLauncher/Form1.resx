<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAA/B////AP///gB///wAf//8AD///AAf//wAH//8AB//+AAf//gAH//wAB//8AAf//oAP///AH
        ///4D////B///ygAAAAgAAAAQAAAAAEABAAAAAAAgAIAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAACAAACA
        AAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//AAD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAiIiIiAAAAAAAAAAAAAAAiId3d3iAAAAAAAAAAAAAiHd3d3d3iAAAAAAAAA
        AACHd3d3d3d3iAAAAAAAAAAIdwAAAHd3d3iAAAAAAAAAiHcP//8Ad3d3gAAAAAAAAIdwAAAA/wd3d4gA
        AAAAAACHcHd3dw/wd3d4AAAAAAAAd3d3iHdwAAh3eIAAAAAAAHd3cAiHd3CHd3h4gAAAAAB3d3CIh3cI
        d3d3d3AAAAAAd3dwd3d3d3d3d3dwAAAAAHAHdwd3d3d3d3d3gAAAAABwB3cHd3d3d3dwhwAAAAAAdwd3
        d3gId3d3B3AAAAAAMHh3d3d3gAh3d3eAMAAAALCAh3d3d3h3d3cIAzAAAAAACAd3d3d4h3dwgDMwAAAA
        MzCId3eIgHd3eAMzMAAAA7uwiId3cAd3d4A7szAAAAuwswiId3d3d3eAO7MwAAALAAswiIiHd3d3gDuz
        AAAAAAAAswAAiHiIeIC7sAAAAAAAALszMwiAAIgDu7AAAAAAAAALu7swAzMAO7sAAAAAAAAAALu7szu7
        O7uwAAAAAAAAAAALu7u7u7u7AAAAAAAAAAAAALu7u7u7sAAAAAAAAAAAAAALu7u7sAAAAAAAAAAAAAAA
        ALuwuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/+Af//+AD//+AAf//AAD//gAAf/wAAD/4AAA/+AAAH/gA
        AB/4AAAH+AAAA/gAAAP4AAAD+AAAA/gAAAfwAAAD4AAAA+AAAAPgAAAD4AAAA8AAAAPAAAADxAAAB+4A
        AA/+AAAP/wAAH/+AAD//wAB//+AA///wAf//+Af///xP/ygAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAA
        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
</value>
  </data>
</root>